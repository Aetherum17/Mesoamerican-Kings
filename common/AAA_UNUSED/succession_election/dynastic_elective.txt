# The entry should be named in the same way that the elective succession law is named to define it's voter's logic.
# Root scope - Elector, the character voting in the election.
# scope:candidate scope - Candidate, Character considered for the title.
# scope:title scope - Title, The title the nomination is for.
# scope:holder scope - Ruler, The ruler currently holding the title.
# scope:holder_candidate scope - Favored Candidate, The title owner's candidate.
# The voter will vote for the top score candidate calculated from this script.

dynastic_elective = {
	elector_vote_strength = {
		base = 0
		modifier = { #Dynasty Prestige level gives more votes
			desc = tooltip_elective_dynastic_prestige
			add = {
				dynasty = {
					value = dynasty_prestige_level
					multiply = 3
				}
			}
		}
		modifier = { #Each barony held by a dynasty member that is part of holder's realm will give 1 vote strength
			desc = tooltip_elective_dynasty_members_titles_in_liege_realm
			add = {
				dynasty = {
					every_dynasty_member = {
						limit = {
							is_landed = yes
							OR = {
								target_is_liege_or_above = scope:holder
								this = scope:holder
							}
						}
						every_held_title = {
							if = {
								limit = { tier = tier_barony }
								add = 1
							}
							if = {
								limit = { tier = tier_duchy }
								add = 2
							}
							if = {
								limit = { tier = tier_kingdom }
								add = 3
							}
							if = {
								limit = { tier = tier_empire }
								add = 4
							}
						}
					}
				}
			}
		}
		modifier = { #Every dynasty member on council gives votes
			desc = tooltip_elective_dynasty_members_on_council
			add = {
				scope:holder = {
					every_councillor = {
						limit = {
							has_dynasty = yes
							dynasty = root.dynasty
						}
						add = 1
					}
				}	
			}
		}
	}
	
	electors = {
		add = holder
		add = {
			type = holder_direct_vassals
			limit = {
				has_dynasty = yes
				trigger_if = {
					limit = { has_dynasty = yes }
					dynasty = {
						dynast = prev
					}
				}
			}
		}
	}

	candidate_score = {
		base = 0
		######################	Elector self-voting pattern	##########################
		elector_self_voting_pattern_feudal_elective_modifier = yes

		##########################	Holder voting pattern	##########################
		holder_voting_pattern_feudal_elective_modifier = yes

		##########################	Elector voting patterns (circumstances)	##########################
		elector_voting_pattern_circumstances_feudal_elective_modifier = yes

		##########################	Elector voting patterns (prestige/piety)	##########################
		elector_voting_pattern_prestige_piety_feudal_elective_modifier = yes

		##########################	Elector voting patterns (traits)	##########################
		elector_voting_pattern_traits_feudal_elective_modifier = yes

		##########################	Elector voting patterns (opinion)	##########################
		elector_voting_pattern_opinion_feudal_elective_modifier = yes
	}
	
	#scope:candidate = Candidate, scope:title = Title, scope:holder_candidate = Candidate currently selected by ruler.
	candidates = {
		add = {
			type = holder_close_or_extended_family
			limit = {
				is_close_family_of = scope:holder
				dynasty = scope:holder.dynasty
				feudal_elective_potential_landless_dynastic_candidate_trigger = yes
			}
		}
		add = {
			type = holder_direct_vassals
			limit = {
				primary_title = {
					de_facto_liege = scope:title
				}
			}
		}
		add = {
			type = title_claimants
			limit = {
				feudal_elective_potential_landless_claimant_candidate_trigger = yes
			}
		}
	}
}
