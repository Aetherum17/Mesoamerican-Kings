establish_tributary_cb = {
	group = subjugation
	ai_only_against_neighbors = yes

	allowed_for_character = {
		#Has Tributary allowing innovation
		tributary_cb_allowed_trigger = yes
		is_independent_ruler = yes
		primary_title.tier >= tier_kingdom
	}

	allowed_for_character_display_regardless = {
		prestige_level >= 3
	}
	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character_display_regardless = {
	}
	
	allowed_against_character = {
		scope:defender = {
			primary_title.tier >= tier_duchy
		}
		scope:attacker.primary_title.tier > scope:defender.primary_title.tier
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
		scope:defender = {
			character_is_realm_neighbor = scope:attacker
		}
	}
	
	cost = {
		piety = {
			value = 0
			if = { # Attacking your HoF is impious
				limit = {
					exists = scope:attacker.faith.religious_head
					scope:attacker.faith.religious_head = scope:defender
				}
				if = {
					limit = {
						scope:attacker.faith = {
							has_doctrine = doctrine_spiritual_head
						}
					}
					add = {
						value = massive_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
				else = {
					add = {
						value = medium_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
			}
			if = {
				limit = {
					scope:attacker.faith = scope:defender.faith
					scope:defender = {
						has_government = theocracy_government
					}
				}
				add = {
					value = medium_piety_value
					desc = CB_ATTACKER_THEOCRACY
				}
			}
		}
		prestige = {
			value = 0
			if = {
				limit = {
					NAND = {
						scope:attacker.faith.religious_head = scope:attacker
						scope:defender.faith = scope:attacker.faith
					}
				}
				add = {
					value = 1000
					desc = CB_BASE_COST
				}
			}
			if = {
				limit = {
					scope:defender.primary_title = {
						tier = tier_kingdom
					}
				}
				multiply = {
					value = 2
					desc = CB_COST_BA_TARGET_IS_KINGDOM
				}
			}
			if = {
				limit = {
					scope:attacker = {
						has_government = tribal_government
					}
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						triple_cb_discount_trigger = yes
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						double_cb_discount_trigger = yes
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						single_cb_discount_trigger = yes
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
		piety = {
			value = 0
			if = {
				limit = {
					scope:attacker.faith.religious_head = scope:attacker
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = 1000
					desc = CB_BASE_COST
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}
	
	should_invalidate = {
	}
	
	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = tributary_cb_victory_desc_attacker
			}
			desc = tributary_cb_victory_desc
		}
	}
	
	on_victory = {
		create_title_and_vassal_change = change
		scope:change = {
			set_title_and_vassal_change_type = conquest
			set_add_claim_on_loss = yes
		}

		scope:defender = {
			change_government = tributary_government
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		
		resolve_title_and_vassal_change = scope:change
		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
	}
	
	on_white_peace = {
		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
	}
	
	on_defeat = {
		# Truce
		add_truce_attacker_defeat_effect = yes
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "BA_TRIBUTARY_WAR_NAME"
	war_name_base = "BA_TRIBUTARY_WAR_NAME_BASE"
	cb_name = "BA_TRIBUTARY_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500
	min_ai_score = 100
}

raiding_party_cb = {
	group = subjugation
	ai_only_against_neighbors = yes

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		#Has Tributary allowing innovation
		unlocked_raiding_cb_trigger = yes
		#is_independent_ruler = yes
		#primary_title.tier >= tier_kingdom
	}
	
	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character_display_regardless = {
	}
	
	allowed_against_character = {
		#scope:defender = {
		#	primary_title.tier >= tier_duchy
		#}
		#scope:attacker.primary_title.tier > scope:defender.primary_title.tier
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
		scope:defender = {
			character_is_realm_neighbor = scope:attacker
		}
	}
	
	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	cost = {
		piety = {
			value = 0
			if = { # Attacking your HoF is impious
				limit = {
					exists = scope:attacker.faith.religious_head
					scope:attacker.faith.religious_head = scope:defender
				}
				if = {
					limit = {
						scope:attacker.faith = {
							has_doctrine = doctrine_spiritual_head
						}
					}
					add = {
						value = massive_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
				else = {
					add = {
						value = medium_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
			}
			if = {
				limit = {
					scope:attacker.faith = scope:defender.faith
					scope:defender = {
						has_government = theocracy_government
					}
				}
				add = {
					value = medium_piety_value
					desc = CB_ATTACKER_THEOCRACY
				}
			}
		}
		prestige = {
			value = 0
			if = {
				limit = {
					NAND = {
						scope:attacker.faith.religious_head = scope:attacker
						scope:defender.faith = scope:attacker.faith
					}
				}
				add = {
					value = 500
					desc = CB_BASE_COST
				}
			}
			if = {
				limit = {
					scope:attacker = {
						has_government = tribal_government
					}
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						triple_cb_discount_trigger = yes
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						double_cb_discount_trigger = yes
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						single_cb_discount_trigger = yes
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
		piety = {
			value = 0
			if = {
				limit = {
					scope:attacker.faith.religious_head = scope:attacker
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = 1000
					desc = CB_BASE_COST
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}
	
	should_invalidate = {
	}
	
	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = raiding_cb_victory_desc_attacker
			}
			desc = raiding_cb_victory_desc
		}
	}
	
	on_victory = {
		hidden_effect = {
			every_in_list = {
				list = target_titles
				save_scope_as = target_title
			}
			scope:defender = {
				every_realm_county = {
					limit = {
						kingdom = scope:target_title
					}
					change_development_level = ba_raiding_development_change_svalue
				}
			}
		}
		custom_tooltip = RAIDING_REDUCE_DEVELOPMENT_EFFECT_TOOLTIP
		scope:attacker = {
			add_gold = ba_raiding_gold_gain_svalue
			add_prestige = ba_raiding_prestige_gain_svalue
		}
		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
	}
	
	on_white_peace = {
		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
	}
	
	on_defeat = {
		# Truce
		add_truce_attacker_defeat_effect = yes
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "BA_RAIDING_WAR_NAME"
	war_name_base = "BA_RAIDING_WAR_NAME_BASE"
	cb_name = "BA_RAIDING_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500
	min_ai_score = 100
}

sumerian_revolt_cb = {
	group = event
	mutually_exclusive_titles = {
		always = yes
	}

	combine_into_one = yes
	should_show_war_goal_subview = yes

	white_peace_possible = no

	allowed_for_character = {
	}
	
	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character_display_regardless = {
	}
	
	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	
	target_titles = none
	target_title_tier = all
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	ai_only_against_neighbors = yes

	valid_to_start = {
		always = no
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
			}
		}
	}

	cost = {
	}
	
	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
	}

	on_victory_desc = {
	}
	
	on_victory = {
		title:k_gutium.holder = {
			every_vassal_or_below = {
				limit = {
					culture = culture:gutian
					capital_province = {
						geographical_region = world_sumerian_revolt_flip
					}
				}
				create_character = {
					culture = culture:south_akkadian
					faith = akkadian_religion
					save_scope_as = newruler
					gender = male
					location = prev.capital_province
				}
				create_title_and_vassal_change = change
				scope:change = {
					set_title_and_vassal_change_type = conquest
					set_add_claim_on_loss = yes
				}
				every_held_title = {
					limit = { is_capital_barony = no }
					change_title_holder = {
						holder = scope:newruler
						change = scope:change
						take_baronies = no
					}
				}
				resolve_title_and_vassal_change = scope:change
			}
			create_character = {
				culture = culture:south_akkadian
				faith = akkadian_religion
				save_scope_as = newruler
				gender = male
				location = title:k_gutium.holder.capital_province
			}
			destroy_title = title:k_gutium
			create_title_and_vassal_change = change
			scope:change = {
				set_title_and_vassal_change_type = conquest
				set_add_claim_on_loss = yes
			}
			every_held_title = {
				limit = { is_capital_barony = no }
				change_title_holder = {
					holder = scope:newruler
					change = scope:change
					take_baronies = no
				}
			}
			resolve_title_and_vassal_change = scope:change
		}
		title:d_pus = { set_de_jure_liege_title = title:k_akkad }
		title:d_mankisum = { set_de_jure_liege_title = title:k_akkad }
		title:d_eshnunna = { set_de_jure_liege_title = title:k_akkad }
		title:d_akkad = { set_de_jure_liege_title = title:k_akkad }
		title:d_malgum = { set_de_jure_liege_title = title:k_akkad }
		title:d_diniktum = { set_de_jure_liege_title = title:k_akkad }
		title:d_wuuru = { set_de_jure_liege_title = title:k_akkad }
		title:d_simudar = { set_de_jure_liege_title = title:k_akkad }
		title:d_ampihabi = { set_de_jure_liege_title = title:k_akkad }
		title:d_tilsaabtani = { set_de_jure_liege_title = title:k_akkad }
		title:d_meturna = { set_de_jure_liege_title = title:k_akkad }
		title:d_durpapsukkal = { set_de_jure_liege_title = title:k_akkad }
		title:d_pilu = { set_de_jure_liege_title = title:k_simurrum }
		title:d_halman = { set_de_jure_liege_title = title:k_simurrum }
		title:d_rabi = { set_de_jure_liege_title = title:k_ellipi }
	}

	on_white_peace_desc = {
	}
	
	on_white_peace = {
	}

	on_defeat_desc = {
	}
	
	on_defeat = {
		title:k_sumer.holder = {
			destroy_title = title:k_sumer
		}
		create_title_and_vassal_change = change
		scope:change = {
			set_title_and_vassal_change_type = conquest
			set_add_claim_on_loss = yes
		}
		war = {
			every_war_attacker = {
				change_liege = {
					liege = title:k_gutium.holder
					change = scope:change
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "SUMERIAN_REVOLT_WAR_NAME"
	war_name_base = "SUMERIAN_REVOLT_WAR_NAME_BASE"
	cb_name = "SUMERIAN_REVOLT_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500
	min_ai_score = 100
}

egyptian_reconquest_cb = {
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = {
		primary_title.tier >= tier_kingdom
	}

	allowed_for_character = {
		always = no
		is_independent_ruler = yes
		faith = { has_doctrine_parameter = reunite_egypt_cb_active }
	}

	allowed_for_character_display_regardless = {
		prestige_level >= 3
		piety_level >= 3
	}

	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	target_titles = all
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}
	ai_score_mult = {
		value = viking_conquest_ai_score_value
	}

	valid_to_start = {
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message
	
	on_invalidated = {
	}

	cost = {
		piety = {
			value = 0
			add = {
				every_in_list = {
					list = target_titles
					add = {
						value = 200
					}
				}
				if = {
					limit = {
						scope:defender.faith = scope:attacker.faith
					}
					add = {
						value = massive_piety_value
						desc = CB_SAME_FAITH_COST
					}
				}
				# Bellum Justum Perk
				if = {
					limit = {
						scope:attacker = {
							has_perk = bellum_justum_perk
						}
					}
					multiply = {
						add = bellum_justum_discount_percentage
						divide = 100
						desc = CB_ATTACKER_BELLUM_JUSTUM
					}
				}

				# Dynasty Warfare Perk
				if = {
					limit = {
						scope:attacker = {
							has_dynasty = yes
							dynasty = {
								has_dynasty_perk = warfare_legacy_2
							}
						}
					}
					multiply = {
						value = warfare_legacy_2_discount
						desc = CB_ATTACKER_DYNASTY_WARFARE
					}
				}

				if = {
					limit = {
						has_game_rule = no_cost_casus_belli_costs
					}
					multiply = {
						value = 0
						desc = CB_GAME_RULE_NO_COST
					}
				}
				every_in_list = {
					list = target_titles
					multiply = {
						value = 1.25
					}
				}
				desc = "CB_EGYPT_COST_PER_TT"
			}
		}
		prestige = {
			value = 0
			add = {
				every_in_list = {
					list = target_titles
					add = {
						value = 100
					}
				}
				#Innovation Prestige Discounts
				if = {
					limit = {
						scope:attacker = {
							triple_cb_discount_trigger = yes
						}
					}
					multiply = {
						value = 0.7
						desc = CB_ATTACKER_INNOVATIONS
					}
				}
				else_if = {
					limit = {
						scope:attacker = {
							double_cb_discount_trigger = yes
						}
					}
					multiply = {
						value = 0.8
						desc = CB_ATTACKER_INNOVATIONS
					}
				}
				else_if = {
					limit = {
						scope:attacker = {
							single_cb_discount_trigger = yes
						}
					}
					multiply = {
						value = 0.9
						desc = CB_ATTACKER_INNOVATIONS
					}
				}

				# Bellum Justum Perk
				if = {
					limit = {
						scope:attacker = {
							has_perk = bellum_justum_perk
						}
					}
					multiply = {
						add = bellum_justum_discount_percentage
						divide = 100
						desc = CB_ATTACKER_BELLUM_JUSTUM
					}
				}

				# Dynasty Warfare Perk
				if = {
					limit = {
						scope:attacker = {
							has_dynasty = yes
							dynasty = {
								has_dynasty_perk = warfare_legacy_2
							}
						}
					}
					multiply = {
						value = warfare_legacy_2_discount
						desc = CB_ATTACKER_DYNASTY_WARFARE
					}
				}

				if = {
					limit = {
						has_game_rule = no_cost_casus_belli_costs
					}
					multiply = {
						value = 0
						desc = CB_GAME_RULE_NO_COST
					}
				}
				every_in_list = {
					list = target_titles
					multiply = {
						value = 1.25
					}
				}
				desc = "CB_EGYPT_COST_PER_TT"
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		create_title_and_vassal_change = change
		scope:change = {
			set_title_and_vassal_change_type = conquest
			set_add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equaly or less tolerated than the defender's),
		# take the holder as vassal otherwise and don't go deeper
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE
			every_in_de_jure_hierarchy = {
				continue = {
					OR = {
						NOT = {
							exists = holder
						}
						NOT = {
							holder = {
								target_is_liege_or_above = scope:defender
							}
						}
						AND = {
							scope:attacker.faith = {
								faith_hostility_level_comparison = {
									prev.holder.faith <= scope:defender.faith
								}
							}
							holder = {
								OR = {
									this = scope:defender
									target_is_liege_or_above = scope:defender
								}
							}
						}
					}
					tier > tier_county
				}
				limit = {
					tier = tier_county
					exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}

				if = {
					limit = {
						OR = {
							scope:attacker.faith = {
								faith_hostility_level_comparison = {
									prev.holder.faith >= scope:defender.faith
								}
							}
							holder.primary_title.tier >= scope:attacker.primary_title.tier
						}
					}
					add_to_temporary_list = titles_taken
				}
				else = {
					holder = {
						add_to_temporary_list = vassals_taken
					}
				}
			}
		}

		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes

	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige = major_prestige_value
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "EGYPT_RECONQUEST_WAR_NAME"
	war_name_base = "EGYPT_RECONQUEST_WAR_NAME_BASE"
	cb_name = "EGYPT_RECONQUEST_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

	min_ai_score = 100
}
